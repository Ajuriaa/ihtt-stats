import { Component, OnInit } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatIconModule } from '@angular/material/icon';\nimport { DashboardQueries } from '../../admin/services';\nimport { ReportesPDFService } from '../services/reportes-pdf.service';\nimport { ReporteParametros, PermisosOperacionData, TipoTransporteData, RegionData } from '../interfaces';\nimport { LoadingComponent } from '../../shared/loading/loading.component';\n\n@Component({\n  selector: 'app-permisos-operacion-report',\n  standalone: true,\n  imports: [\n    CommonModule,\n    FormsModule,\n    MatButtonModule,\n    MatCardModule,\n    MatDatepickerModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatSelectModule,\n    MatNativeDateModule,\n    MatProgressSpinnerModule,\n    MatIconModule,\n    LoadingComponent\n  ],\n  template: `\n    <div class=\"permisos-operacion-container\">\n      <mat-card class=\"filter-card\">\n        <mat-card-header>\n          <mat-card-title>Reporte de Permisos de Operación</mat-card-title>\n          <mat-card-subtitle>Análisis detallado de permisos otorgados por tipo de transporte y región</mat-card-subtitle>\n        </mat-card-header>\n        \n        <mat-card-content>\n          <div class=\"filters-section\">\n            <h3>Parámetros del Reporte</h3>\n            \n            <div class=\"filters-grid\">\n              <!-- Filtro de fechas -->\n              <div class=\"date-filters\">\n                <mat-form-field appearance=\"outline\">\n                  <mat-label>Fecha Inicio</mat-label>\n                  <input \n                    matInput \n                    [matDatepicker]=\"pickerInicio\" \n                    [(ngModel)]=\"filtros.fechaInicio\"\n                    (dateChange)=\"onFechaInicioChange($event.value)\">\n                  <mat-datepicker-toggle matSuffix [for]=\"pickerInicio\"></mat-datepicker-toggle>\n                  <mat-datepicker #pickerInicio></mat-datepicker>\n                </mat-form-field>\n                \n                <mat-form-field appearance=\"outline\">\n                  <mat-label>Fecha Fin</mat-label>\n                  <input \n                    matInput \n                    [matDatepicker]=\"pickerFin\" \n                    [(ngModel)]=\"filtros.fechaFin\"\n                    (dateChange)=\"onFechaFinChange($event.value)\">\n                  <mat-datepicker-toggle matSuffix [for]=\"pickerFin\"></mat-datepicker-toggle>\n                  <mat-datepicker #pickerFin></mat-datepicker>\n                </mat-form-field>\n              </div>\n              \n              <!-- Filtro de región -->\n              <mat-form-field appearance=\"outline\">\n                <mat-label>Región</mat-label>\n                <mat-select [(ngModel)]=\"filtros.region\">\n                  <mat-option value=\"\">Todas las regiones</mat-option>\n                  <mat-option *ngFor=\"let region of regiones\" [value]=\"region\">\n                    {{ region }}\n                  </mat-option>\n                </mat-select>\n              </mat-form-field>\n            </div>\n            \n            <!-- Botones de acción -->\n            <div class=\"action-buttons\">\n              <button mat-raised-button color=\"primary\" (click)=\"cargarDatos()\" [disabled]=\"cargando\">\n                <mat-icon>refresh</mat-icon>\n                Actualizar Datos\n              </button>\n              \n              <button \n                mat-raised-button \n                color=\"accent\" \n                (click)=\"generarReportePDF()\"\n                [disabled]=\"cargando || !datosDisponibles\">\n                <mat-icon>picture_as_pdf</mat-icon>\n                Generar Reporte PDF\n              </button>\n            </div>\n          </div>\n        </mat-card-content>\n      </mat-card>\n      \n      <!-- Vista previa de datos -->\n      <mat-card class=\"preview-card\" *ngIf=\"!cargando && datosPermisos\">\n        <mat-card-header>\n          <mat-card-title>Vista Previa de Datos</mat-card-title>\n          <mat-card-subtitle>Resumen de permisos de operación</mat-card-subtitle>\n        </mat-card-header>\n        \n        <mat-card-content>\n          <div class=\"preview-grid\">\n            <!-- Resumen general -->\n            <div class=\"preview-section\">\n              <h4>Resumen General</h4>\n              <div class=\"summary-stats\">\n                <div class=\"summary-item\">\n                  <mat-icon>description</mat-icon>\n                  <div>\n                    <span class=\"summary-value\">{{ datosPermisos.totalPermisosActual }}</span>\n                    <span class=\"summary-label\">Permisos Actuales</span>\n                  </div>\n                </div>\n                <div class=\"summary-item\">\n                  <mat-icon>trending_up</mat-icon>\n                  <div>\n                    <span class=\"summary-value\" [class.positive]=\"datosPermisos.variacionTotal > 0\" [class.negative]=\"datosPermisos.variacionTotal < 0\">\n                      {{ datosPermisos.variacionTotal.toFixed(2) }}%\n                    </span>\n                    <span class=\"summary-label\">Variación Mensual</span>\n                  </div>\n                </div>\n              </div>\n            </div>\n            \n            <!-- Tipos de transporte -->\n            <div class=\"preview-section\">\n              <h4>Clasificación por Tipo de Transporte</h4>\n              <div class=\"transport-types\">\n                <div *ngFor=\"let tipo of datosPermisos.tiposTransporte\" class=\"transport-item\">\n                  <div class=\"transport-header\">\n                    <span class=\"transport-name\">{{ tipo.nombre }}</span>\n                    <span class=\"transport-count\">{{ tipo.permisos }} permisos</span>\n                  </div>\n                  <div class=\"transport-variation\" [class.positive]=\"tipo.variacionMensual > 0\" [class.negative]=\"tipo.variacionMensual < 0\">\n                    Variación: {{ tipo.variacionMensual.toFixed(2) }}%\n                  </div>\n                </div>\n              </div>\n            </div>\n            \n            <!-- Segmentación por región (si aplica) -->\n            <div class=\"preview-section\" *ngIf=\"datosPermisos.regiones && datosPermisos.regiones.length > 0\">\n              <h4>Segmentación por Región</h4>\n              <div class=\"regions-grid\">\n                <div *ngFor=\"let region of datosPermisos.regiones\" class=\"region-item\">\n                  <div class=\"region-header\">\n                    <mat-icon>location_on</mat-icon>\n                    <span class=\"region-name\">{{ region.nombre }}</span>\n                  </div>\n                  <div class=\"region-stats\">\n                    <span class=\"region-count\">{{ region.permisos }} permisos</span>\n                    <span class=\"region-variation\" [class.positive]=\"region.variacionMensual > 0\" [class.negative]=\"region.variacionMensual < 0\">\n                      {{ region.variacionMensual.toFixed(2) }}%\n                    </span>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </mat-card-content>\n      </mat-card>\n      \n      <!-- Loading state -->\n      <div *ngIf=\"cargando\" class=\"loading-section\">\n        <app-loading></app-loading>\n        <p>Cargando datos de permisos de operación...</p>\n      </div>\n    </div>\n  `,\n  styles: [`\n    .permisos-operacion-container {\n      padding: 20px;\n      display: flex;\n      flex-direction: column;\n      gap: 20px;\n      max-width: 1200px;\n      margin: 0 auto;\n    }\n\n    .filter-card, .preview-card {\n      box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\n      border-radius: 8px;\n    }\n\n    .filters-section {\n      padding: 16px 0;\n    }\n\n    .filters-section h3 {\n      margin-bottom: 16px;\n      color: #333;\n      font-weight: 500;\n    }\n\n    .filters-grid {\n      display: grid;\n      grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\n      gap: 16px;\n      margin-bottom: 20px;\n    }\n\n    .date-filters {\n      display: flex;\n      gap: 16px;\n      grid-column: 1 / -1;\n    }\n\n    .date-filters mat-form-field {\n      flex: 1;\n    }\n\n    .action-buttons {\n      display: flex;\n      gap: 12px;\n      flex-wrap: wrap;\n    }\n\n    .action-buttons button {\n      display: flex;\n      align-items: center;\n      gap: 8px;\n    }\n\n    .preview-grid {\n      display: grid;\n      gap: 20px;\n    }\n\n    .preview-section h4 {\n      margin: 0 0 12px 0;\n      color: #333;\n      font-weight: 500;\n      border-bottom: 2px solid #e0e0e0;\n      padding-bottom: 8px;\n    }\n\n    .summary-stats {\n      display: grid;\n      grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n      gap: 16px;\n    }\n\n    .summary-item {\n      display: flex;\n      align-items: center;\n      gap: 12px;\n      padding: 16px;\n      background-color: #f8f9fa;\n      border-radius: 8px;\n    }\n\n    .summary-item mat-icon {\n      font-size: 24px;\n      color: #2196F3;\n    }\n\n    .summary-value {\n      display: block;\n      font-size: 1.5rem;\n      font-weight: 600;\n      color: #333;\n    }\n\n    .summary-value.positive {\n      color: #4CAF50;\n    }\n\n    .summary-value.negative {\n      color: #F44336;\n    }\n\n    .summary-label {\n      font-size: 0.9rem;\n      color: #666;\n    }\n\n    .transport-types {\n      display: grid;\n      gap: 12px;\n    }\n\n    .transport-item {\n      padding: 12px;\n      border: 1px solid #e0e0e0;\n      border-radius: 8px;\n      background-color: #fafafa;\n    }\n\n    .transport-header {\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      margin-bottom: 4px;\n    }\n\n    .transport-name {\n      font-weight: 500;\n      color: #333;\n    }\n\n    .transport-count {\n      font-weight: 600;\n      color: #2196F3;\n    }\n\n    .transport-variation {\n      font-size: 0.9rem;\n      font-weight: 500;\n    }\n\n    .transport-variation.positive {\n      color: #4CAF50;\n    }\n\n    .transport-variation.negative {\n      color: #F44336;\n    }\n\n    .regions-grid {\n      display: grid;\n      grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n      gap: 12px;\n    }\n\n    .region-item {\n      padding: 12px;\n      border: 1px solid #e0e0e0;\n      border-radius: 8px;\n      background-color: #fafafa;\n    }\n\n    .region-header {\n      display: flex;\n      align-items: center;\n      gap: 8px;\n      margin-bottom: 8px;\n    }\n\n    .region-header mat-icon {\n      font-size: 18px;\n      color: #FF9800;\n    }\n\n    .region-name {\n      font-weight: 500;\n      color: #333;\n    }\n\n    .region-stats {\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n    }\n\n    .region-count {\n      font-weight: 600;\n      color: #2196F3;\n    }\n\n    .region-variation {\n      font-size: 0.9rem;\n      font-weight: 500;\n    }\n\n    .region-variation.positive {\n      color: #4CAF50;\n    }\n\n    .region-variation.negative {\n      color: #F44336;\n    }\n\n    .loading-section {\n      display: flex;\n      flex-direction: column;\n      align-items: center;\n      justify-content: center;\n      padding: 40px;\n      text-align: center;\n    }\n\n    .loading-section p {\n      margin-top: 16px;\n      color: #666;\n    }\n\n    mat-form-field {\n      width: 100%;\n    }\n\n    @media (max-width: 768px) {\n      .permisos-operacion-container {\n        padding: 16px;\n      }\n      \n      .filters-grid {\n        grid-template-columns: 1fr;\n      }\n      \n      .date-filters {\n        flex-direction: column;\n      }\n      \n      .summary-stats {\n        grid-template-columns: 1fr;\n      }\n      \n      .regions-grid {\n        grid-template-columns: 1fr;\n      }\n    }\n  `]\n})\nexport class PermisosOperacionReportComponent implements OnInit {\n  cargando = false;\n  datosPermisos: PermisosOperacionData | null = null;\n  datosDisponibles = false;\n  \n  // Filtros\n  filtros: ReporteParametros = {\n    fechaInicio: '',\n    fechaFin: '',\n    region: ''\n  };\n\n  regiones = [\n    'Región Central',\n    'Región Norte',\n    'Región Sur',\n    'Región Oriental',\n    'Región Occidental'\n  ];\n\n  constructor(\n    private dashboardQueries: DashboardQueries,\n    private reportesPDFService: ReportesPDFService\n  ) {}\n\n  ngOnInit(): void {\n    this.cargarDatos();\n  }\n\n  cargarDatos(): void {\n    this.cargando = true;\n    const parametros = this.construirParametros();\n    \n    // Simular carga de datos específicos de permisos\n    setTimeout(() => {\n      this.generarDatosMock();\n      this.cargando = false;\n    }, 1500);\n  }\n\n  private construirParametros(): any {\n    const params: any = {};\n    \n    if (this.filtros.fechaInicio) {\n      params.startDate = this.filtros.fechaInicio;\n    }\n    if (this.filtros.fechaFin) {\n      params.endDate = this.filtros.fechaFin;\n    }\n    if (this.filtros.region) {\n      params.region = this.filtros.region;\n    }\n    \n    return params;\n  }\n\n  private generarDatosMock(): void {\n    this.datosPermisos = {\n      tiposTransporte: [\n        { nombre: 'Transporte de Carga', permisos: 145, variacionMensual: 8.5 },\n        { nombre: 'Transporte de Pasajeros', permisos: 89, variacionMensual: -2.3 },\n        { nombre: 'Transporte Mixto', permisos: 67, variacionMensual: 15.2 },\n        { nombre: 'Transporte Escolar', permisos: 34, variacionMensual: 4.1 },\n        { nombre: 'Transporte Turístico', permisos: 23, variacionMensual: -7.8 }\n      ],\n      regiones: [\n        { nombre: 'Región Central', permisos: 156, variacionMensual: 12.4 },\n        { nombre: 'Región Norte', permisos: 98, variacionMensual: 5.7 },\n        { nombre: 'Región Sur', permisos: 78, variacionMensual: -3.2 },\n        { nombre: 'Región Oriental', permisos: 45, variacionMensual: 8.9 },\n        { nombre: 'Región Occidental', permisos: 81, variacionMensual: 2.1 }\n      ],\n      totalPermisosActual: 358,\n      totalPermisosAnterior: 332,\n      variacionTotal: 7.8\n    };\n    this.datosDisponibles = true;\n  }\n\n  generarReportePDF(): void {\n    if (!this.datosPermisos) {\n      alert('No hay datos disponibles para generar el reporte');\n      return;\n    }\n\n    this.reportesPDFService.generarReportePermisosOperacion(\n      this.datosPermisos,\n      this.filtros\n    );\n  }\n\n  onFechaInicioChange(fecha: string): void {\n    this.filtros.fechaInicio = fecha;\n  }\n\n  onFechaFinChange(fecha: string): void {\n    this.filtros.fechaFin = fecha;\n  }\n}"