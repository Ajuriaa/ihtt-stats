import { Component, OnInit } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatIconModule } from '@angular/material/icon';\nimport { DashboardQueries } from '../../admin/services';\nimport { ReportesPDFService } from '../services/reportes-pdf.service';\nimport { ReporteParametros, DashboardGeneralData, DepartamentoData, AlertaData } from '../interfaces';\nimport { LoadingComponent } from '../../shared/loading/loading.component';\n\n@Component({\n  selector: 'app-dashboard-general-report',\n  standalone: true,\n  imports: [\n    CommonModule,\n    FormsModule,\n    MatButtonModule,\n    MatCardModule,\n    MatDatepickerModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatSelectModule,\n    MatNativeDateModule,\n    MatProgressSpinnerModule,\n    MatIconModule,\n    LoadingComponent\n  ],\n  template: `\n    <div class=\"dashboard-general-container\">\n      <mat-card class=\"filter-card\">\n        <mat-card-header>\n          <mat-card-title>Reporte Dashboard General</mat-card-title>\n          <mat-card-subtitle>Genere reportes estadísticos generales del sistema</mat-card-subtitle>\n        </mat-card-header>\n        \n        <mat-card-content>\n          <div class=\"filters-section\">\n            <h3>Parámetros del Reporte</h3>\n            \n            <div class=\"filters-grid\">\n              <!-- Filtro de fechas -->\n              <div class=\"date-filters\">\n                <mat-form-field appearance=\"outline\">\n                  <mat-label>Fecha Inicio</mat-label>\n                  <input \n                    matInput \n                    [matDatepicker]=\"pickerInicio\" \n                    [(ngModel)]=\"filtros.fechaInicio\"\n                    (dateChange)=\"onFechaInicioChange($event.value)\">\n                  <mat-datepicker-toggle matSuffix [for]=\"pickerInicio\"></mat-datepicker-toggle>\n                  <mat-datepicker #pickerInicio></mat-datepicker>\n                </mat-form-field>\n                \n                <mat-form-field appearance=\"outline\">\n                  <mat-label>Fecha Fin</mat-label>\n                  <input \n                    matInput \n                    [matDatepicker]=\"pickerFin\" \n                    [(ngModel)]=\"filtros.fechaFin\"\n                    (dateChange)=\"onFechaFinChange($event.value)\">\n                  <mat-datepicker-toggle matSuffix [for]=\"pickerFin\"></mat-datepicker-toggle>\n                  <mat-datepicker #pickerFin></mat-datepicker>\n                </mat-form-field>\n              </div>\n              \n              <!-- Filtro de departamento -->\n              <mat-form-field appearance=\"outline\">\n                <mat-label>Departamento</mat-label>\n                <mat-select [(ngModel)]=\"filtros.departamento\">\n                  <mat-option value=\"\">Todos los departamentos</mat-option>\n                  <mat-option *ngFor=\"let dept of departamentos\" [value]=\"dept\">\n                    {{ dept }}\n                  </mat-option>\n                </mat-select>\n              </mat-form-field>\n            </div>\n            \n            <!-- Botones de acción -->\n            <div class=\"action-buttons\">\n              <button mat-raised-button color=\"primary\" (click)=\"cargarDatos()\" [disabled]=\"cargando\">\n                <mat-icon>refresh</mat-icon>\n                Actualizar Datos\n              </button>\n              \n              <button \n                mat-raised-button \n                color=\"accent\" \n                (click)=\"generarReportePDF()\"\n                [disabled]=\"cargando || !datosDisponibles\">\n                <mat-icon>picture_as_pdf</mat-icon>\n                Generar Reporte PDF\n              </button>\n            </div>\n          </div>\n        </mat-card-content>\n      </mat-card>\n      \n      <!-- Vista previa de datos -->\n      <mat-card class=\"preview-card\" *ngIf=\"!cargando && datosGenerales\">\n        <mat-card-header>\n          <mat-card-title>Vista Previa de Datos</mat-card-title>\n          <mat-card-subtitle>Resumen de la información que se incluirá en el reporte</mat-card-subtitle>\n        </mat-card-header>\n        \n        <mat-card-content>\n          <div class=\"preview-grid\">\n            <!-- Totales mensuales -->\n            <div class=\"preview-section\">\n              <h4>Totales del Período</h4>\n              <div class=\"stats-grid\">\n                <div class=\"stat-item\">\n                  <span class=\"stat-label\">Certificados:</span>\n                  <span class=\"stat-value\">{{ datosGenerales.certificadosEmitidos }}</span>\n                </div>\n                <div class=\"stat-item\">\n                  <span class=\"stat-label\">Permisos:</span>\n                  <span class=\"stat-value\">{{ datosGenerales.permisosOtorgados }}</span>\n                </div>\n                <div class=\"stat-item\">\n                  <span class=\"stat-label\">Multas:</span>\n                  <span class=\"stat-value\">{{ datosGenerales.multasAplicadas }}</span>\n                </div>\n                <div class=\"stat-item\">\n                  <span class=\"stat-label\">Ingresos:</span>\n                  <span class=\"stat-value\">L. {{ datosGenerales.ingresosMensuales.toLocaleString('es-HN') }}</span>\n                </div>\n              </div>\n            </div>\n            \n            <!-- Variaciones -->\n            <div class=\"preview-section\">\n              <h4>Variaciones Porcentuales</h4>\n              <div class=\"variations-grid\">\n                <div class=\"variation-item\" [class.positive]=\"datosGenerales.variacionCertificados > 0\" [class.negative]=\"datosGenerales.variacionCertificados < 0\">\n                  <span>Certificados: {{ datosGenerales.variacionCertificados.toFixed(2) }}%</span>\n                </div>\n                <div class=\"variation-item\" [class.positive]=\"datosGenerales.variacionPermisos > 0\" [class.negative]=\"datosGenerales.variacionPermisos < 0\">\n                  <span>Permisos: {{ datosGenerales.variacionPermisos.toFixed(2) }}%</span>\n                </div>\n                <div class=\"variation-item\" [class.positive]=\"datosGenerales.variacionMultas > 0\" [class.negative]=\"datosGenerales.variacionMultas < 0\">\n                  <span>Multas: {{ datosGenerales.variacionMultas.toFixed(2) }}%</span>\n                </div>\n                <div class=\"variation-item\" [class.positive]=\"datosGenerales.variacionIngresos > 0\" [class.negative]=\"datosGenerales.variacionIngresos < 0\">\n                  <span>Ingresos: {{ datosGenerales.variacionIngresos.toFixed(2) }}%</span>\n                </div>\n              </div>\n            </div>\n            \n            <!-- Alertas -->\n            <div class=\"preview-section\" *ngIf=\"datosGenerales.alertas.length > 0\">\n              <h4>Alertas del Sistema</h4>\n              <div class=\"alerts-list\">\n                <div \n                  *ngFor=\"let alerta of datosGenerales.alertas\" \n                  class=\"alert-item\"\n                  [class.critical]=\"alerta.estado === 'CRÍTICO'\"\n                  [class.warning]=\"alerta.estado === 'ADVERTENCIA'\"\n                  [class.normal]=\"alerta.estado === 'NORMAL'\">\n                  <mat-icon>{{ getAlertIcon(alerta.estado) }}</mat-icon>\n                  <span>{{ alerta.concepto }}: {{ alerta.valorActual }} ({{ alerta.estado }})</span>\n                </div>\n              </div>\n            </div>\n          </div>\n        </mat-card-content>\n      </mat-card>\n      \n      <!-- Loading state -->\n      <div *ngIf=\"cargando\" class=\"loading-section\">\n        <app-loading></app-loading>\n        <p>Cargando datos del dashboard...</p>\n      </div>\n    </div>\n  `,\n  styles: [`\n    .dashboard-general-container {\n      padding: 20px;\n      display: flex;\n      flex-direction: column;\n      gap: 20px;\n      max-width: 1200px;\n      margin: 0 auto;\n    }\n\n    .filter-card, .preview-card {\n      box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\n      border-radius: 8px;\n    }\n\n    .filters-section {\n      padding: 16px 0;\n    }\n\n    .filters-section h3 {\n      margin-bottom: 16px;\n      color: #333;\n      font-weight: 500;\n    }\n\n    .filters-grid {\n      display: grid;\n      grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\n      gap: 16px;\n      margin-bottom: 20px;\n    }\n\n    .date-filters {\n      display: flex;\n      gap: 16px;\n      grid-column: 1 / -1;\n    }\n\n    .date-filters mat-form-field {\n      flex: 1;\n    }\n\n    .action-buttons {\n      display: flex;\n      gap: 12px;\n      flex-wrap: wrap;\n    }\n\n    .action-buttons button {\n      display: flex;\n      align-items: center;\n      gap: 8px;\n    }\n\n    .preview-grid {\n      display: grid;\n      gap: 20px;\n    }\n\n    .preview-section h4 {\n      margin: 0 0 12px 0;\n      color: #333;\n      font-weight: 500;\n      border-bottom: 2px solid #e0e0e0;\n      padding-bottom: 8px;\n    }\n\n    .stats-grid {\n      display: grid;\n      grid-template-columns: repeat(2, 1fr);\n      gap: 12px;\n    }\n\n    .stat-item {\n      display: flex;\n      justify-content: space-between;\n      padding: 8px 12px;\n      background-color: #f8f9fa;\n      border-radius: 4px;\n    }\n\n    .stat-label {\n      font-weight: 500;\n      color: #666;\n    }\n\n    .stat-value {\n      font-weight: 600;\n      color: #333;\n    }\n\n    .variations-grid {\n      display: grid;\n      grid-template-columns: repeat(2, 1fr);\n      gap: 8px;\n    }\n\n    .variation-item {\n      padding: 8px 12px;\n      border-radius: 4px;\n      text-align: center;\n      font-weight: 500;\n    }\n\n    .variation-item.positive {\n      background-color: #e8f5e8;\n      color: #2e7d32;\n    }\n\n    .variation-item.negative {\n      background-color: #ffebee;\n      color: #c62828;\n    }\n\n    .alerts-list {\n      display: flex;\n      flex-direction: column;\n      gap: 8px;\n    }\n\n    .alert-item {\n      display: flex;\n      align-items: center;\n      gap: 8px;\n      padding: 8px 12px;\n      border-radius: 4px;\n      font-weight: 500;\n    }\n\n    .alert-item.critical {\n      background-color: #ffebee;\n      color: #c62828;\n    }\n\n    .alert-item.warning {\n      background-color: #fff8e1;\n      color: #f57c00;\n    }\n\n    .alert-item.normal {\n      background-color: #e8f5e8;\n      color: #2e7d32;\n    }\n\n    .loading-section {\n      display: flex;\n      flex-direction: column;\n      align-items: center;\n      justify-content: center;\n      padding: 40px;\n      text-align: center;\n    }\n\n    .loading-section p {\n      margin-top: 16px;\n      color: #666;\n    }\n\n    mat-form-field {\n      width: 100%;\n    }\n\n    @media (max-width: 768px) {\n      .dashboard-general-container {\n        padding: 16px;\n      }\n      \n      .filters-grid {\n        grid-template-columns: 1fr;\n      }\n      \n      .date-filters {\n        flex-direction: column;\n      }\n      \n      .stats-grid, .variations-grid {\n        grid-template-columns: 1fr;\n      }\n    }\n  `]\n})\nexport class DashboardGeneralReportComponent implements OnInit {\n  cargando = false;\n  datosGenerales: DashboardGeneralData | null = null;\n  datosDisponibles = false;\n  \n  // Filtros\n  filtros: ReporteParametros = {\n    fechaInicio: '',\n    fechaFin: '',\n    departamento: ''\n  };\n\n  departamentos = [\n    'Atlántida', 'Choluteca', 'Colón', 'Comayagua', 'Copán', 'Cortés',\n    'El Paraíso', 'Francisco Morazán', 'Gracias a Dios', 'Intibucá',\n    'Islas de la Bahía', 'La Paz', 'Lempira', 'Ocotepeque', 'Olancho',\n    'Santa Bárbara', 'Valle', 'Yoro'\n  ];\n\n  constructor(\n    private dashboardQueries: DashboardQueries,\n    private reportesPDFService: ReportesPDFService\n  ) {}\n\n  ngOnInit(): void {\n    this.cargarDatos();\n  }\n\n  cargarDatos(): void {\n    this.cargando = true;\n    const parametros = this.construirParametros();\n    \n    // Simular carga de datos del dashboard\n    this.dashboardQueries.getDashboardAnalytics(parametros).subscribe({\n      next: (response) => {\n        this.datosGenerales = this.procesarDatosDashboard(response);\n        this.datosDisponibles = true;\n        this.cargando = false;\n      },\n      error: (error) => {\n        console.error('Error al cargar datos del dashboard:', error);\n        this.generarDatosMock(); // Fallback con datos mock\n        this.cargando = false;\n      }\n    });\n  }\n\n  private construirParametros(): any {\n    const params: any = {};\n    \n    if (this.filtros.fechaInicio) {\n      params.startDate = this.filtros.fechaInicio;\n    }\n    if (this.filtros.fechaFin) {\n      params.endDate = this.filtros.fechaFin;\n    }\n    if (this.filtros.departamento) {\n      params.department = this.filtros.departamento;\n    }\n    \n    return params;\n  }\n\n  private procesarDatosDashboard(data: any): DashboardGeneralData {\n    // Procesar datos reales del API\n    return {\n      certificadosEmitidos: data.certificatesIssued || 0,\n      certificadosAcumulados: data.certificatesAccumulated || 0,\n      permisosOtorgados: data.permitsGranted || 0,\n      permisosAcumulados: data.permitsAccumulated || 0,\n      multasAplicadas: data.finesApplied || 0,\n      multasAcumuladas: data.finesAccumulated || 0,\n      ingresosMensuales: data.monthlyRevenue || 0,\n      ingresosAcumulados: data.accumulatedRevenue || 0,\n      variacionCertificados: data.certificatesVariation || 0,\n      variacionPermisos: data.permitsVariation || 0,\n      variacionMultas: data.finesVariation || 0,\n      variacionIngresos: data.revenueVariation || 0,\n      ingresosCertificados: data.certificatesRevenue || 0,\n      ingresosPermisos: data.permitsRevenue || 0,\n      ingresosMultas: data.finesRevenue || 0,\n      ingresosOtros: data.otherRevenue || 0,\n      departamentos: data.departments || [],\n      alertas: data.alerts || []\n    };\n  }\n\n  private generarDatosMock(): void {\n    // Generar datos mock para desarrollo/testing\n    this.datosGenerales = {\n      certificadosEmitidos: 145,\n      certificadosAcumulados: 1250,\n      permisosOtorgados: 89,\n      permisosAcumulados: 756,\n      multasAplicadas: 67,\n      multasAcumuladas: 423,\n      ingresosMensuales: 125000,\n      ingresosAcumulados: 980000,\n      variacionCertificados: 8.5,\n      variacionPermisos: -2.3,\n      variacionMultas: 15.7,\n      variacionIngresos: 12.4,\n      ingresosCertificados: 75000,\n      ingresosPermisos: 30000,\n      ingresosMultas: 15000,\n      ingresosOtros: 5000,\n      departamentos: [\n        { nombre: 'Francisco Morazán', certificados: 45, permisos: 28, multas: 22, ingresos: 45000 },\n        { nombre: 'Cortés', certificados: 38, permisos: 25, multas: 18, ingresos: 38000 },\n        { nombre: 'Atlántida', certificados: 32, permisos: 20, multas: 15, ingresos: 28000 }\n      ],\n      alertas: [\n        { concepto: 'Certificados Vencidos', valorActual: 25, umbral: 20, estado: 'ADVERTENCIA' },\n        { concepto: 'Multas Pendientes', valorActual: 45, umbral: 50, estado: 'NORMAL' }\n      ]\n    };\n    this.datosDisponibles = true;\n  }\n\n  generarReportePDF(): void {\n    if (!this.datosGenerales) {\n      alert('No hay datos disponibles para generar el reporte');\n      return;\n    }\n\n    this.reportesPDFService.generarReporteDashboardGeneral(\n      this.datosGenerales,\n      this.filtros\n    );\n  }\n\n  onFechaInicioChange(fecha: string): void {\n    this.filtros.fechaInicio = fecha;\n  }\n\n  onFechaFinChange(fecha: string): void {\n    this.filtros.fechaFin = fecha;\n  }\n\n  getAlertIcon(estado: string): string {\n    switch (estado) {\n      case 'CRÍTICO': return 'error';\n      case 'ADVERTENCIA': return 'warning';\n      case 'NORMAL': return 'check_circle';\n      default: return 'info';\n    }\n  }\n}"